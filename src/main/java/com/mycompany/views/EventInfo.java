
package com.mycompany.views;

import com.mycompany.dsfr.DAOEventosImpl;
import com.mycompany.dsfr.Dashboard;
import static com.mycompany.dsfr.Dashboard.ShowJPanel;
import java.awt.Color;
import javax.swing.table.DefaultTableModel;
import com.mycompany.models.Evento;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author cristian
 */
public class EventInfo extends javax.swing.JPanel {

    private LocalDate fechaSeleccionada;

    public EventInfo(Date fechaSeleccionada) {
        this.fechaSeleccionada = fechaSeleccionada.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate();
        initComponents();

        Locale spanishLocale = new Locale("es", "ES");
        // Formateo
        DateTimeFormatter dayFormatter = DateTimeFormatter.ofPattern("EEEE", spanishLocale);
        String dia = this.fechaSeleccionada.format(dayFormatter);

        dia = dia.substring(0, 1).toUpperCase() + dia.substring(1);

        DateTimeFormatter restFormatter = DateTimeFormatter.ofPattern(" dd 'de' MMMM 'del' yyyy", spanishLocale);
        String resto = this.fechaSeleccionada.format(restFormatter);

        String fechaFormateada = dia + resto;

        fechaJLabel.setText(fechaFormateada);
        fechaJLabel.putClientProperty("FlatLaf.style", "font: 18 $light.font");
        fechaJLabel.setForeground(Color.black);

        InitStyles();
        LoadEventosPorFecha();
    }

    private void InitStyles() {
        title.putClientProperty("FlatLaf.styleClass", "h1");
        title.setForeground(Color.black);
        title1.putClientProperty("FlatLaf.styleClass", "h2");
        title1.setForeground(Color.black);
    }

    private void LoadEventosPorFecha() {
        try {
            DAOEventosImpl dao = new DAOEventosImpl();
            List<Object[]> eventos = dao.listarEventosDetalladosPorFecha(fechaSeleccionada);

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // limpiamos

            for (Object[] fila : eventos) {

                String usuarioAsignado = (fila[7] == null || fila[7].toString().trim().isEmpty() || "No Asignado".equals(fila[7].toString()))
                        ? "-"
                        : fila[7].toString();

                fila[7] = usuarioAsignado;

                model.addRow(fila);
            }

            // Centramos
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
            for (int i = 0; i < jTable1.getColumnCount(); i++) {
                jTable1.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    "Error cargando eventos: " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        bg = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        returnButton = new javax.swing.JButton();
        detailsButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        title1 = new javax.swing.JLabel();
        fechaJLabel = new javax.swing.JLabel();

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(752, 427));

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setPreferredSize(new java.awt.Dimension(752, 427));

        title.setText("Información del Evento");

        deleteButton.setBackground(new java.awt.Color(18, 90, 173));
        deleteButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Eliminar");
        deleteButton.setBorderPainted(false);
        deleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        returnButton.setBackground(new java.awt.Color(18, 90, 173));
        returnButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        returnButton.setForeground(new java.awt.Color(255, 255, 255));
        returnButton.setText("Atrás");
        returnButton.setBorderPainted(false);
        returnButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        detailsButton.setBackground(new java.awt.Color(18, 90, 173));
        detailsButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        detailsButton.setForeground(new java.awt.Color(255, 255, 255));
        detailsButton.setText("Detalles");
        detailsButton.setBorderPainted(false);
        detailsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        detailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailsButtonActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(18, 90, 173));
        addButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Nuevo");
        addButton.setBorderPainted(false);
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Evento", "Título", "Estado", "ID Disfraz", "Disfraces", "Disponibles", "Fecha", "Usuario Asignado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(80);
        }

        title1.setText("Eventos para esta Fecha:");

        fechaJLabel.setText("{Dayname} {day} {month} {year}");

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(returnButton, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                .addGap(25, 25, 25)
                                .addComponent(detailsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                .addGap(289, 289, 289)
                                .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(title1)
                                .addGap(18, 18, 18)
                                .addComponent(fechaJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bgLayout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(33, 33, 33))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addGap(38, 38, 38)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(title1)
                    .addComponent(fechaJLabel))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addGap(40, 40, 40)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(detailsButton)
                    .addComponent(deleteButton)
                    .addComponent(returnButton))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // Crear la vista UpEvent pasando la fecha de EventInfo
        UpEvent upEventPanel = new UpEvent(null,
                java.util.Date.from(fechaSeleccionada.atStartOfDay(ZoneId.systemDefault()).toInstant()),
                "EventInfo"
        );
        Dashboard.ShowJPanel(upEventPanel);

    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int[] filasSeleccionadas = jTable1.getSelectedRows();

        if (filasSeleccionadas.length < 1) {
            JOptionPane.showMessageDialog(this,
                    "Debes seleccionar uno o más eventos a eliminar.",
                    "Aviso",
                    JOptionPane.WARNING_MESSAGE);
            jTable1.requestFocusInWindow();
            return;
        }

        int confirm = JOptionPane.showOptionDialog(
                this,
                "Esto también eliminará todos los disfraces y asignaciones relacionadas.\n"
                + "¿Estás seguro de eliminar los eventos seleccionados?",
                "Confirmación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                new Object[]{"No", "Sí"},
                "Cancelar"
        );

        if (confirm != 1) {
            return;
        }

        DAOEventosImpl dao = new DAOEventosImpl();

        try {
            Arrays.sort(filasSeleccionadas);
            for (int i = filasSeleccionadas.length - 1; i >= 0; i--) {
                int rowIndex = filasSeleccionadas[i];
                int eventId = (int) jTable1.getValueAt(rowIndex, 0);
                dao.eliminarEvento(eventId);  // Eliminación en cascada
                model.removeRow(rowIndex);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    "Error eliminando evento: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed

    }//GEN-LAST:event_jTable1MousePressed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        ShowJPanel(new Calendar());
    }//GEN-LAST:event_returnButtonActionPerformed

    private void detailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailsButtonActionPerformed

        int filaSeleccionada = jTable1.getSelectedRow();

        if (filaSeleccionada > -1) {
            try {
                int eventId = (int) jTable1.getValueAt(filaSeleccionada, 0);

                DAOEventosImpl dao = new DAOEventosImpl();

                Evento eventoSeleccionado = dao.obtenerDetallesPorId(eventId);

                Dashboard.ShowJPanel(new EventDetails(eventoSeleccionado));

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al cargar los detalles del evento: " + e.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Debes seleccionar un evento para ver los detalles.",
                    "AVISO", JOptionPane.WARNING_MESSAGE);
            jTable1.requestFocusInWindow();
        }
    }//GEN-LAST:event_detailsButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JPanel bg;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton detailsButton;
    private javax.swing.JLabel fechaJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JButton returnButton;
    private javax.swing.JLabel title;
    private javax.swing.JLabel title1;
    // End of variables declaration//GEN-END:variables
}
